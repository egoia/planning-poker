stages:
  - test
  - build
  - deploy

variables:
  # Indique où GitLab Pages va chercher les fichiers générés
  PUBLIC_DIR: public
  UNITY_LICENSE: $UNITY_LICENSE
  UNITY_EMAIL: $UNITY_EMAIL
  UNITY_PASSWORD: $UNITY_PASSWORD

cache:
  key: "Library-${CI_PROJECT_DIR}"
  paths:
    - ${CI_PROJECT_DIR}/test-project/Library

build-docs:
  stage: build
  image: ubuntu:latest
  script:
    - apt-get update
    - apt-get install -y doxygen graphviz
    - doxygen conf/Doxyfile
  artifacts:
    paths:
      - documentation/
    expire_in: 1 week

.test-template:
  stage: test
  image: unityci/editor:ubuntu-2020.1.1f1-android-0.3.0
  script:
    - echo "Running tests in $TEST_MODE mode"
    - unity-editor \
      -batchmode \
      -nographics \
      -silent-crashes \
      -logfile /dev/stdout \
      -runTests \
      -testPlatform $TEST_MODE \
      -projectPath ./test-project \
      -testResults ./artifacts/test-results-${TEST_MODE}.xml \
      -coverageOptions "generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*"
  artifacts:
    when: always
    paths:
      - artifacts/test-results-${TEST_MODE}.xml
      - artifacts/${TEST_MODE}-coverage
    expire_in: 1 week

test_editmode:
  extends: .test-template
  variables:
    TEST_MODE: "editmode"
  artifacts:
    paths:
      - artifacts/editmode-artifacts

test_playmode:
  extends: .test-template
  variables:
    TEST_MODE: "playmode"
  artifacts:
    paths:
      - artifacts/playmode-artifacts

test_standalone:
  extends: .test-template
  variables:
    TEST_MODE: "standalone"
  artifacts:
    paths:
      - artifacts/standalone-artifacts

pages:
  stage: deploy
  script:
    - mv documentation/html/ $PUBLIC_DIR
  artifacts:
    paths:
      - $PUBLIC_DIR
    expire_in: 1 week
  only:
    - ToUnity