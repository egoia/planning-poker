stages:
  - test
  - build
  - deploy

variables:
  PUBLIC_DIR: public
  UNITY_LICENSE: $UNITY_LICENSE
  UNITY_EMAIL: $UNITY_USERNAME
  UNITY_PASSWORD: $UNITY_PASSWORD
  IMAGE: unityci/editor # https://hub.docker.com/r/unityci/editor
  IMAGE_VERSION: 3 # This will automatically use latest v3.x.x, see https://github.com/game-ci/docker/releases
  UNITY_VERSION: 6000.0.25f1


cache:
  key: "Library-${CI_PROJECT_DIR}"
  paths:
    - ${CI_PROJECT_DIR}/test-project/Library

build-docs:
  stage: build
  image: ubuntu:latest
  script:
    - apt-get update
    - apt-get install -y doxygen graphviz
    - doxygen conf/Doxyfile
  artifacts:
    paths:
      - documentation/
    expire_in: 1 week

run-tests:
  stage: test
  image: $IMAGE:$UNITY_VERSION-base-$IMAGE_VERSION
    - echo "Activating Unity license..."
    - unity-editor -batchmode -nographics -quit -username "$UNITY_EMAIL" -password "$UNITY_PASSWORD" -serial "$UNITY_LICENSE"
    - echo "Running tests..."
    - unity-editor -batchmode -nographics -runTests -testResults TestResults.xml -testPlatform playmode -projectPath ./test-project
  artifacts:
    paths:
      - TestResults.xml
    reports:
      junit: TestResults.xml
    expire_in: 1 week
  dependencies: []
  
pages:
  stage: deploy
  script:
    - mv documentation/html/ $PUBLIC_DIR
  artifacts:
    paths:
      - $PUBLIC_DIR
    expire_in: 1 week
  only:
    - ToUnity

.test-template:
  stage: test
  image: ubuntu:latest
  before_script:
    # Mise à jour et installation des dépendances
    - apt-get update && apt-get install -y wget gdebi-core curl sudo

    # Ajouter la clé publique et le dépôt Unity Hub
    - wget -qO - https://hub.unity3d.com/linux/keys/public | gpg --dearmor | sudo tee /usr/share/keyrings/Unity_Technologies_ApS.gpg > /dev/null
    - echo "deb [signed-by=/usr/share/keyrings/Unity_Technologies_ApS.gpg] https://hub.unity3d.com/linux/repos/deb stable main" | sudo tee /etc/apt/sources.list.d/unityhub.list

    # Installer Unity Hub
    - apt-get update && apt-get install -y unityhub

    # Installer Unity Editor (remplacez la version par celle que vous utilisez)
    - unityhub --headless install --version 2021.3.9f1

    # Activer la licence Unity
    - unityhub --headless activate --username "$UNITY_EMAIL" --password "$UNITY_PASSWORD" --serial "$UNITY_LICENSE"
  script:
    - echo "Running tests in $TEST_MODE mode"
    - unity-editor \
        -batchmode \
        -nographics \
        -silent-crashes \
        -logfile /dev/stdout \
        -runTests \
        -testPlatform $TEST_MODE \
        -projectPath ./test-project \
        -testResults ./artifacts/test-results-${TEST_MODE}.xml \
        -coverageOptions "generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*"
  artifacts:
    when: always
    paths:
      - artifacts/test-results-${TEST_MODE}.xml
      - artifacts/${TEST_MODE}-coverage
    expire_in: 1 week

