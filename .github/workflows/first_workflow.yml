name: Test project

on: [push, pull_request]

permissions:
  contents: write
  pull-requests: write

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: ./Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            Library-${{ runner.os }}-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          testMode: ${{ matrix.testMode }}
          artifactsPath: ./${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ./${{ matrix.testMode }}-artifacts
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ./${{ matrix.testMode }}-coverage
